<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.CourseDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.Course">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="number" property="number" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="period" property="period" jdbcType="INTEGER"/>
        <result column="credit" property="credit" jdbcType="INTEGER"/>
        <result column="teacher" property="teacher" jdbcType="VARCHAR"/>
        <result column="intro" property="intro" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, number, name, period, credit, teacher, intro 
    </sql>

    <select id="findAllCourses" resultType="com.example.second.entity.Course">
        select * from course
    </select>

    <select id="findCourseByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from course where name = #{name,jdbcType=VARCHAR}
    </select>

    <delete id="deleteCoursesByIds">
        delete from course where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountCourses" resultType="java.lang.Integer">
        select count(uid) as count from course
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from course
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteCourseById" parameterType="java.lang.Long">
        delete from course
        where uid = #{uid,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.Course">
        insert into course (uid, number, name, period, credit, teacher, intro)
        values (#{uid,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
                #{period,jdbcType=INTEGER}, #{credit,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR},
                #{intro,jdbcType=VARCHAR})
    </insert>
    <insert id="addCourse" parameterType="com.example.second.entity.Course">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="period != null">
                period,
            </if>
            <if test="credit != null">
                credit,
            </if>
            <if test="teacher != null">
                teacher,
            </if>
            <if test="intro != null">
                intro,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="number != null">
                #{number,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="period != null">
                #{period,jdbcType=INTEGER},
            </if>
            <if test="credit != null">
                #{credit,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateCourse" parameterType="com.example.second.entity.Course">
        update course
        <set>
            <if test="number != null">
                number = #{number,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="period != null">
                period = #{period,jdbcType=INTEGER},
            </if>
            <if test="credit != null">
                credit = #{credit,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                teacher = #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.Course">
        update course
        set number = #{number,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        period = #{period,jdbcType=INTEGER},
        credit = #{credit,jdbcType=INTEGER},
        teacher = #{teacher,jdbcType=VARCHAR},
        intro = #{intro,jdbcType=VARCHAR},
        where uid = #{uid,jdbcType=BIGINT}
    </update>
</mapper>